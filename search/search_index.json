{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About us","text":""},{"location":"#welcome-to-flextoolcwatm-user-guide","title":"Welcome to FlexTool/CWatM User Guide!","text":""},{"location":"#the-genesis","title":"The genesis","text":"<p>In an effort to support the energy transition and consider the impact of climate change, needs to understand better the interaction between water cycles and its impact on water availability for hydropower stations is becoming of utmost important. This is in particular importance in regions where hydropower is the main source of power and where water has conflicting usage between sectors e.g. energy, agriculture. As a technical research institute, VTT has been committed to develop state-of-the-art energy system models, such as IRENA FlexTool, but also many others. </p> <p>On the other hand, hydrology modelling has seen a leap in taking at hand the development of models that consider the nexus dilemma in their modelling approach. One of these models is CWatM, an open source hydrology model developed by IIASA. CWatM covers multiple water-dependent sectors such as the agriculture and energy. It includes the water demand both from domestic and industrial usage. It can evaluate the water demand from crops depending on the type of crops that is being grown in the water basin. Recently, CWatM has integrated the groundwater model Modflow6 in its heart, offering more possibility to track down where the water goes. The time resolution goes down to daily simulation of the water flow, and the geographical resolution starts from 30 arc min down to a 1 km resolution. It grids the area where the water is extracted and has a module for integrating water reservoirs and its discharge over time. However, the hydropower representation in CWatM is very simple, and does not consider its integration into an energy system. This is where our motivation to create a bridge between these two established and open source models is born. </p> <p>Unlike CWatM, IRENA FlexTool is an optimisation energy system model that aims at minimising the system costs in its operations at an hourly resolution. It is highly flexible and technologies can be specific to a single power plant or aggregated by energy sources. It offers investments decision on power production technology development and infrastructure reinforcements or capacity expansion. Simple to use, the third version of FlexTool now runs through an open-source user interface, also co-developed by VTT, SpineToolbox. SpineToolbox is a data flow, scenario, and alternative management interface. SpineToolbox is model agnostic and can run natively any models developed in Python, Julia, and GAMS. Moreover, SpineToolbox can run any *.exe software, or run batch files within its terminal. It is a cross platform tool that can be used on Windows, Linux, and MacOS. Since CWatM does not have any user interface, the first step towards model integration was to give CWatM an interface where all its scenario can be handled in a single database (instead of being scattered through multiple, self-managed *.ini files). SpineToolbox can further handle the parallelisation of the runs by isolating each instance of every models.</p>"},{"location":"#support","title":"Support","text":"<p>Currently, the model coupling is supported by the Finnish Ministry of Foreign Affairs and the Research Council of Finland via the TU-Nexus project. The University of Oulu brings their expertise in hydrology while VTT provides the energy system modelling expertise as well as the model coupling competences.</p>"},{"location":"#how-to-cite","title":"How to cite","text":"<p>At the moment, we are still in the early phase of the model integration, therefore no scientific publication is yet available. However, in an effort of transparency, we are making the development available for anyone interested in this integration, and invite any experts in the field to test it out and provide us feedback on its usability. We are trying to keep the research community up-to-date via this documentation page.</p>"},{"location":"#go-further","title":"Go further","text":"<p>Learn more about CWatM here \u2192 </p> <p>Learn more about IRENA FlexTool here \u2192</p> <p>Learn more about SpineToolbox here and the Spine Family suite.</p>"},{"location":"#the-team","title":"The team","text":"<p>Contact us: does-info@vtt.fi</p> <p>VTT is the Technical Research of Finland in which the Design and Operation of Energy System team is leading the development of energy system modelling tools. </p>              Jean-Nicolas Louis                           Research Team Leader                          Model coupling and CWatM                           integration in SpineToolbox                           Juha Kiviluoma                           Principal Scientist                          Model coupling                           Nelli Putkonen                           Research Scientist                          FlexTool model                          Model coupling                           Rinat Abdurafikov                           Research Scientist                          FlexTool model                               Doniyor Urishov                           Research Scientist                          Local interaction                               Arttu Tupala                           Research Trainee                          FlexTool model              <p>The University of Oulu is located in the north of Finland and has a strong water research team developed in the water, energy, and environmental engineering research unit.</p>"},{"location":"Tutorial/","title":"Running standalone version","text":""},{"location":"Tutorial/#running-standalone-version","title":"Running standalone version","text":"<p>Let's setup an instance of SpineToolbox (hereafter Toolbox) by creating an empty database, importing the initial init file provided by the example of CWatM. We will then import the calibration file. We will then see how to create alternatives to the base init file or import a new initial file from CWatM. Finally, we will to calibration run, running CWatM as a standalone model and running CWatM model as model coupling with an energy system model.</p> <p></p>"},{"location":"Tutorial/#new-database","title":"New Database","text":""},{"location":"Tutorial/#setting-the-database","title":"Setting the database","text":"<p>Before starting setting up a totally new workflow, Toolbox requires to be linked to a database. In this particular case we are using .sqlite, but one can choose between sqlite and mysql. Create a new database by first selecting the data store . This will display the Data Store Properties (DSP). From the DSP, click the New Spine db button to save your database in your environment.</p> <p>Tip</p> <p>Good practices would be that the new database is saved under .spinetoolbox\\Data\\</p> <p>You will then need to:</p> <ul> <li>Edit the path of the database in the following data store (copy/paste the relative path or select the file from the file icon )</li> <li>Data Store</li> <li>data_store_loop</li> <li>best_calib</li> </ul> <p>This step will create an empty database with one alternative called Base. This alternative will be empty and we can now start populating the data from 1. a data structure that can be imported into the database or 2. a n existing CWatM **.ini* file into the database. </p>"},{"location":"Tutorial/#populating-the-database","title":"Populating the database","text":""},{"location":"Tutorial/#method-1-import-an-existing-database","title":"Method 1: Import an existing database","text":"<p>This method is the easiest if you are starting with a new CWatM project. Download (right-click and save the file) the .json document that will parse the database with the CWatM 30 min examples with already pre-defined alternatives and scenario (for a single run of CWatM and calibration). This database has more parameters already defined from other CWatM projects (i.e. 5-arcmin). </p> <p>This method is the most convenient and should be done anyway as parameters are declared properly. one could then import an existing ini file into this database later on.</p>"},{"location":"Tutorial/#method-2-import-from-cwatm-ini-file","title":"Method 2: Import from CWatM ini file","text":"<p>Tip</p> <p>This section refers to the import ini file section part of the workflow</p> <p>The best way to start importing existing ini file within Toolbox is to take one of the CWatM setting files for the 30 arcmin or 5 arcmin. In this example we will populate the 5 arcmin setting files but this setup can be done with the 30 arcmin as well.</p> <p>First, select the data connection box that will link the ini file to Toolbox. This will display the Data Connection Properties (DCP) window on the right-hand side. In case a filepath is already present in the File paths field, adding a new file will be made in addition to the current file path. One can safely remove the link by right cliking the filepath and click remove reference(s) or click the - button while having the filepath selected. By clicking the + icon you can select the ini setting file.</p> <p>As mentioned earlier, if a tool is marked with an exclamation mark , this means that there is a problem in the workflow. By changing the reference setting file, this will most likely be triggered in the following step but can easily be corrected.</p> <p>The next step is to ensure that the file is considered in the workflow. Select the convert_to_valid_toml tool and it will display its Tool Properties window on the right hand side. If the name of the file from the Tool arguments exist in the Available resources listed in the tool, then this is all good and the tool is configured correctly. In case the tool arguments is displayed in red, this means that the file is not available in the Available resources. It usually happens if the file in the data connection is changed (see previous step). Simply drag and drop the file from the Available resources to the Tool arguments, then remove the link displayed in red by selecting the argument and click the - button .</p> <p></p> <p>The second tool parse_toml is very important and the end-user wants to put attention into the arguments that are passed to the tool. Since there can be multiple ini files that are imported into the Spine Database, each variable should be loaded into a different alternative. If the alternative name is not changed, it will overwrite the previously imported ini file.</p> <p></p> <p>The second argument : is the name of the alternative where the ini file parameters will be imported in, in this tutorial we will name it 5_arcmin_base. The  argument should not be touched and left as is. This is to tell the importer that we are importing a cwatm ini file. The  argument define that it will update the values and should be always set to true if you want to update the existing alternative, if not set it to false. Select the 3 tool together and run only the selection . Running only this section will import your CWatM ini file into the Spine Database.</p> <p>This will import 2 alternatives, the first one being the CWatM core ini file, and another one named _output, which allocate the outputs in a separate alternative. This is to better use the structure of the data with the calibration runs.</p> <p>Tip</p> <p>In case you have multiple ini file that you want to import, repeat these steps as many times as necessary. You can try this out by duplicating the original setting file and change some values in it. Relink the file in the workflow as explained in this section but allocate it to a different alternative. It will create a new alternative and import only the variables that differ from the base database that we first imported into the database.</p>"},{"location":"Tutorial/#fix-the-database-for-toolbox","title":"Fix the database for Toolbox","text":"<p>Tip</p> <p>This section refers to the database section part of the workflow</p> <p>The Toolbox database will be displaying exactly what was in the ini file originally. Therefore, the path to weather files and others should be correct. However, if the setting file was imported as is, the path filepaths need to be updated.</p> <p>The most important one is the PathRoot parameter_name in the FILE_PATHS entity. Locate where the input files were saved on the machine. Other filepaths that needs attention are: FILE_PATHS\\PathMeteo, and if necessary the FILE_PATHS\\Excel_settings_file parameter_names.</p> <p>The last parameter that requires to be changed is due to the use of Toolbox, this is the output folder location FILE_PATHS\\PathOut. </p> <p>Tip</p> <p>If you have first imported the CWatM database from the json file, the output database alternative already exists. Either change the alternative name for the output variables or simply delete the parameters.</p> <p>One of the feature of running CWatM with Toolbox is that you can run all your scenarios in parallel. These parallelisation of the runs is automatically handled by Toolbox. However, since CWatM is writing outputs after every loop, the output folder will need to be defined relative to the path of the scenario. Simply replace the string in the FILE_PATHS\\PathOut to <code>./output</code>. Toolbox will then create an output folder for every scenario and will avoid reading and writing to the same output files.</p>"},{"location":"Tutorial/#other-changes","title":"Other changes","text":"<p>Cold and Warm starts are possible in CWatM. The settings are located under the entity class INITITIAL CONDITIONS. The parameter initLoad and initSave should be modified similarly to the output folder and making it relative path to the project e.g. ./init/ and similarly initLoad should resemble the same pattern ./init/.nc</p> <p>Tip</p> <p>After every modification of the database, it needs to be commited by ctrl+enter or click the icon commit </p>"},{"location":"Tutorial/#relink-cwatm","title":"Relink CWatM","text":"<p>The CWatM tool is linked by default to be under the current repository. Often, people will have their own CWatM copy and therefore there a need to relink the CWatM module. This is because when cloning/forking this workflow, Toolbox assumes that the tool comes along with it but we do not want to ship CWatM alongside this workflow but rather link to a self-contained CWatM model (whether you are developing it or just using it). In order to do perform the relink, you need to open any CWatM tool e.g.</p> <p></p> <p>By double clicking the icon, you will see the files that are included in the tool.</p> <p></p> <p>The main programme  needs to be updated first and then all the other programmes. While the main programme is selected, open the white folder and locate the CWatM folder locally, and select the toolbox_compatibility.py file. For the files in , open the white folder and multi-select each of the three python scripts, then select the black folder in  to relink all the files from the cwatm and the mf6 folders. Save your work and you can close the window.</p> <p>Tip</p> <p>There are two ways to relink files, either relink a single file by using the white folder icon , or relink all the files in a folder by using the black folder icon </p>"},{"location":"Tutorial/#prepare-a-scenario","title":"Prepare a scenario","text":"<p>When we imported the data from the original ini file from CWatM to the database, we have created an alternative called 5_arcmin_base. Toolbox can run either a specific alternative or scenario, which is a combination of multiple alternatives. Running scenario is the preferred way to run the data flow to keep consistency between all model runs. From the database, there is a list of scenario that user can create on the right-hand side.</p> <p></p> <p>Select an empty scenario and input a name for a scenario e.g. 5_arc_min. </p> <p>Tip</p> <p>For differentiating alternative and scenario names, it is good practice to change the name that it is clearer when you are using the workflow what you are using, an alternative or a scenario setup.</p> <p></p> <p>You can now drag and drop alternatives to a specific scenario. There are no limitations to how many alternatives are allocated to a scenario, however, one must be careful in which order they are listed in the scenario. Toolbox handles the data allocations based on the order the alternatives were set in the scenario. In essence, Toolbox will take all the values from the first alternative, then take the values from the n<sup>th</sup> alternative to either replace the values or supplement the data with new data if it was not present in the previous alternative.</p> <p></p> <p>This is the reason it is recommended to have a Base alternative that the modeller can always refer to and alter with other alternatives when necessary.</p> <p></p> <p>By default, the 5_arc_min scenario will be selected into the workflow. If you happen to create more scenarios (by combining multiple alternatives) and want to run only specific scenario, you can select the scenario run by selecting the yellow arrow in the workflow.</p>"},{"location":"Tutorial/#running-cwatm-as-a-standalone-version","title":"Running CWatM as a standalone version","text":"<p>With these settings, the database can be modified (adding alternatives and scenario) and can run CWatM as a standalone application. </p> <p>Select the two tools in standalone workflow, and run the select button . This will run the scenario </p>"},{"location":"about/","title":"Welcome to Predicer's User Guide!","text":""},{"location":"about/#welcome-to-predicers-user-guide","title":"Welcome to Predicer's User Guide!","text":""},{"location":"example_models/","title":"Coupling","text":""},{"location":"example_models/#coupling-cwatm-and-irena-flextool","title":"Coupling CWatM and IRENA FlexTool","text":""},{"location":"example_models/#required-modifications","title":"Required modifications","text":"<p>A series of modifications are needed in order to operate CWatM in a loop with any other models. In this implementation, the models are run in sequence with a given time window.</p> <p>New variables are introduced in the ini file used by CWatM and are readily available in the toolbox workflow basic_model.json file. If you import an existing init file, you may create these variables manually from the spinedatabase.</p> entity name Parameter name Role FILE_PATHS PathCombinednc This variable defines the location where the final output is located. OPTIONS loopcount This is a boolean value that starts with the value FALSE for every new iteration OPTIONS looptoolbox Boolean to tell if you are running CWatM in a loop (TRUE) or not (FALSE). TIME-RELATED_CONSTANTS RollFlexTool Time duration of the CWatM model (D, M, Y) TIME-RELATED_CONSTANTS StepFlexTool The date for the end of the simulation <p>These variables are already defined in the CWatM template and may be changed directly after importing the template.</p> <p>In case an existing init file is imported into an empty database (see the import section), users must create these variables manually. The preferred way however is to first create a database with the template, then import your existing init file as all variables are already pre-defined within the template.</p> <p>Some of the existing variables from CWatM need to be modified to access init values generated by CWatM</p>"},{"location":"getting_started/","title":"Getting Started","text":""},{"location":"getting_started/#getting-started","title":"Getting Started","text":""},{"location":"getting_started/#before-running-the-workflow","title":"Before running the workflow","text":"<p>This workflow does not come with CWatM. Therefore, to use this workflow, you will need to get the CWatM model on your local machine as well. The model is well documented and tutorials are available on YouTube to learn how to install it with its dependency.</p>"},{"location":"getting_started/#python","title":"Python","text":"<p>The best way to interact with the different packages is to work in a virtual environment in e.g. miniconda. </p>"},{"location":"getting_started/#spinetoolbox","title":"SpineToolbox","text":"<p>Make sure you have installed SpineToolbox as instructed and you are using the latest version of SpineToolbox. The recommended way is to install it using the binary file. In this examples, we are using the Git repository but it does not change the workflow setup.</p> <ol> <li>Make sure you have installed SpineToolbox as instructed and you are using the latest version of SpineToolbox.</li> <li>you are using Spine Database API </li> </ol>"},{"location":"getting_started/#flextool","title":"FlexTool","text":"<p>TBD</p>"},{"location":"getting_started/#cwatm-spinetoolbox","title":"CWatM-SpineToolbox","text":"<ol> <li> <p>using miniconda, create an environment where workflow and CWatM libraries and other dependencies can be installed.</p> </li> <li> <p>Go to the directory where the workflow will be located e.g. <code>C:\\Git\\&lt;YOUR FOLDER&gt;\\</code></p> </li> <li> <p>cd into your folder <code>cd C:\\Git\\&lt;YOUR FOLDER&gt;\\</code></p> </li> <li> <p>clone the git repo into the folder <code>git clone git@github.com:jeanlouisnico/CWatM-spinetoolbox.git</code></p> </li> <li> <p>create your conda environment and activate it</p> </li> </ol> <p><code>(base) C:\\Git\\&lt;YOUR FOLDER&gt;\\&gt; conda create -n &lt;YOUR ENV&gt; python=3.11</code></p> <p><code>(base) C:\\Git\\&lt;YOUR FOLDER&gt;\\&gt; conda activate &lt;YOUR ENV&gt;</code></p> <ol> <li> <p>cd in the folder where the cloned git repo is installed  <code>cd C:\\Git\\&lt;YOUR FOLDER&gt;\\CWatM-spinetoolbox</code></p> </li> <li> <p>Install the required libraries for the workflow to work out</p> </li> </ol> <pre><code>(&lt;YOUR ENV&gt;) C:\\Git\\&lt;YOUR FOLDER&gt;\\CWatM-spinetoolbox&gt; pip install -r .spinetoolbox\\requirements.txt\n</code></pre>"},{"location":"getting_started/#cwatm","title":"CWatM","text":"<p>The best way to interact with CWatM is to clone or fork the git version of the repository.</p> <p>As described in the CWatM instructions to run the model, it is best to download all necessary versions for 30, 5 arcmin and weather data or directly from the ISIMIP repository.  This is then to be changed in the path to locate where those folders will be downloaded. </p> <p>Warning</p> <p>The weather files provided from CWatM are from 1980 to 2019 (as of February 2025). If your calibration runs start before this data, you should download the data from the ISIMIP repository (starts from 1901).</p> <p>Alongside the CWatM-SpineToolbox deliverable, the toolbox_compatibility.py file needs to be copied to the CWatM folder. this python script allows to start different instances of CWatM from python script instead of command line as traditionally used by the CWatM community. The file is currently located under .\\CWatM-spinetoolbox\\calibration\\CWatM. This python file needs to be placed under .\\CWatM folder in the local computer.</p>"},{"location":"getting_started/#how-to-use","title":"How to use","text":"<p>Once all the tools are installed you can first launch SpineToolbox from terminal or miniconda (depending on how SpineToolbox has been installed) and then open the SpineToolbox project that integrates CWatM and FlexTool. It should launch the SpineToolbox interface as below.</p> <p></p> <p>in File&gt;Open project (ctrl+o), locate the folder where the CWatM-spinetoolbox repository on your computer (following the structure above, it should be located here <code>C:\\Git\\&lt;YOUR FOLDER&gt;\\</code>). This will open the basic workflow of the model coupling. With this workflow you can</p> <p></p> <ol> <li>Make calibration runs;</li> <li>Make CWatM runs as a standalone application</li> <li>Make model coupling runs between CWatM and IRENA FlexTool </li> </ol>"},{"location":"getting_started/#what-is-the-workflow-about","title":"What is the workflow about?","text":"<p>Not that if you already have an existing workflow from a previous project, you can change the origin of the ini file from the file you have been previously configuring as shown in the picture below. This workflow is split into different section that can run as a whole or can be run by section (by selection the boxes, one can run only the selected workflows) </p> <p> Import of the calibration .ini file into the database</p> <p> Resetting the database</p> <p> Import CWatM .ini files</p> <p> The Spine Database</p> <p> Run your calibration</p> <p> Run CWatM as a standalone application</p> <p> Run CWatM with IRENA FlexTool </p> <p>Tip</p> <p>You can also select each of the yellow arrows to see more options on how the workflow works. </p> <p>Tip</p> <p>Please go through the SpineToolbox documentation for an extended explanation of what are each boxes role and if needed how to modify the workflow</p> <p>Material for MkDocs is published as a Python package and can be installed with <code>pip</code>, ideally by using a virtual environment. Open up a terminal and install Material for MkDocs with:</p> Latest9.x <pre><code>pip install mkdocs-material\n</code></pre> <pre><code>pip install mkdocs-material==\"9.*\" # (1)!\n</code></pre> <ol> <li> <p>Material for MkDocs uses [semantic versioning]<sup>1</sup>, which is why it's a     good idea to limit upgrades to the current major version.</p> <p>This will make sure that you don't accidentally [upgrade to the next major version], which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>Tip</p> <p>If you don't have prior experience with Python, we recommend reading [Using Python's pip to Manage Your Projects' Dependencies], which is a really good introduction on the mechanics of Python package management and helps you troubleshoot if you run into errors.</p> <ol> <li> <p>Note that improvements of existing features are sometimes released as patch releases, like for example improved rendering of content tabs, as they're not considered to be new features.\u00a0\u21a9</p> </li> </ol>"},{"location":"input_data/","title":"Input data","text":""},{"location":"input_data/#to-come","title":"To come ....","text":""},{"location":"introduction/","title":"Overview","text":""},{"location":"introduction/#why-integrating-hydrology-and-energy-system-models","title":"Why integrating hydrology and energy system models","text":""},{"location":"introduction/#for-whom","title":"For Whom?","text":"<p>IRENA FlexTool was primarily designed to be used for planning the energy transition in developing countries. It is developed by VTT for IRENA and it is distributed to IRENA members. IRENA FlexTool is also accessible on GitHub. With the growing complexity of energy system planning, the need to have an understanding of where the water comes from and goes become necessary to better manage hydropower stations that are installed along a river basin. To this extent, </p>"},{"location":"introduction/#how-does-it-work","title":"How does it work","text":"<p>The first challenge is to identify what each model can perform and provide as an input to the next model. the limitations of each model should be acknowledged in case further improvement or specific challenges need to be tackled. CWatM is very versatile and has integrated many features and sectors over the years. It integrates global weather files and extract the data needed for the studied basin. It can further simulate discharge flows from one cell to another with a daily resolution. It evaluates the reservoirs level and can allocate water resources for agricultural, domestic, industrial, or farming use. Groundwater is also possible to simulate via the existing integration of CWatM and Modflow6 in the core of CWatM. </p> <p></p> <p>In essence, the modelling concept consists of 3 modules; one of the glacier module, one for the hydrology modelling, and the energy system modelling. The purpose of this workflow is to combine only the last two modules, namely CWatM for the hydrology and IRENA FlexTool for the energy system model. </p> <p>CWatM can simulate changes in the water flow by including rainfall patterns, lakes, and reservoirs charge and discharge, and includes the water demand from domestic, industrial, and agricultural activities. The types of crops need to be defined in the model to have a better representation of the crop rotation and water demand cycle throughout the growth cycle of plants.  It then calculates the spilled water from hydropower stations to evaluate the amount of water that goes through the downstream water flow. This is where the coupling of the energy system model and the hydrology model becomes interesting as hydropower may have different water spillage fluctuations based on market and energy needs. </p>"},{"location":"introduction/#the-energy-system-side","title":"The energy system side","text":"<p>The energy system, through multiple countries, must be represented in FlexTool and a set of data comprising of the energy system, power production units, capacity, fuel types, ramp rates (up and down), infrastructure specification on transmission networks etc... must be collected and detailed (see section on data). This first stage is common practice in building any energy system models.</p> <p></p> <p>To consider the cascading hydropower sector, the hydropower stations that are part of the same basin are taken away from the main node and details on these specific hydropower stations need to be provided. Other hydropower capacity are aggregated under one node. In case other trading countries are included, the energy system of the trading countries need to be included in a similar manner. </p>"},{"location":"introduction/#data-needs","title":"Data needs","text":"<p>The following data are needed to build the energy system model and should serve as a guideline to collect data.</p> Demand node Location / region A map that shows how the nodes have been split Annual demand Historical and future if available [MWh] Demand time series Historical profile. [MWh] Will be scaled to match the annual value Storage Existing storage  capacity [MWh or m3 in case of hydro] Investment cost If relevant/available [currency/kWh] Investment cost for new storage capacity. Units Location (which  node) Existing capacity [MW] Efficiency [factor] Conversion efficiency of a unit. Minimum load If relevant and if available [0-1] Minimum load of the unit. Efficiency at minimum load If relevant and if available [e.g. 0.4 means 40%] Efficiency of the unit at minimum load. Investment cost If relevant [currency/kW of output] Fixed annual cost If relevant [currency/kW of output/year] Annually recurring costs Startup cost \u00cff relevant [currency/MW] Cost of starting up one MW of capacity. Other operational cost Other than fuel/startup costs [currency/MWh] Unit size If relevant/available [MW] For units consisting of multiple sub-units. Fuel If relevant If multiple fuels possible, explain any constraints in their use. Ramp limits (upward and downward) If relevant [per unit / minute] Ramp cost (upward and downward) If relevant Hydro: Head height Average (at least) [m] Hydro: Design flow [m3/s] Flow at which maximum capacity is reached Hydro: Limits on spill and river flows Could be time series... [m3/s] Connections Which nodes the connection connects Existing capacity [MW] Efficiency [factor] Transfer efficiency (1 - losses) Investment cost If relevant/available [currency/kW of output] Fixed annual cost If relevant [currency/kW of output/year] Annually recurring costs Fuels Fuel price [currency/MWh of fuel] CO2 content If not a common fuel type [t_CO2/MWh of fuel] Further  parameters we might want Capability of units to provide  primary/contingency reserves Primary/contingency reserve requirements  in the system"},{"location":"introduction/#workflow-in-brief","title":"Workflow in brief","text":"<p>Model interactions in practice for a specific basin is performed in sequence between CWatM and FlexTool. 1. First a calibration run must be performed to set the variables to the hydro flow from selected hydro stations. This step can be quite long as it should include multiple years and is done with a combination of multiple variables. The calibration run provides the best fit and can be re-used in a CWatM model. 2. The best data are stored back into the database and can be used to run the simulation over the period that is decided. The model should be run a first time to have as a cold start and therefore prepare the model for future warm starts. This stage will also be helpful to give FlexTool an horizon of the reservoir level for a full year in advance before altering the level of the reservoir. For this cold start, the SpinUp value (the value from which the data are generated by CWatM) should be set to None at the beginning of the simulations and save the last day set to be saved in the init folder. 3. The outputs as well as the init file are sent to IRENA FlexTool to be read. These include a set of variables (see initial variable saved) that are automatically saved by CWatM model and the output are set (user-defined). In the first loop, IRENA FlexTool will read all the water flow from the river basin to include the cascading hydropower and set the stochastic variables in the model. After the first iteration, the simulation will run day-by-day to have the values changed. 4. With the updated values of water flows and reservoirs level at different points in the basin, the init file is updated and CWatM can continue its simulation with the updated values for one day. 5. The output data generated as well as the init file is passed to IRENA FlexTool. 6. Data are decoded (and transformed into hourly values?). IRENA FlexTool can run that n+1 day and re-allocate the computed data for the next CWatM run and so on. 7. Once the simulation reaches the end date of the simulation, the results for the entire simulation are stored.</p> <p>Within a given water basin, the data extracted and to be computed by both models are presented in the workflow below. The model is built to have consecutively a hydro reservoir, hydro powerplant and its dedicated spillage.  Electricity output  from hydro power plant are computed by the different stations across a country A and aggregated for the basin in the same country. They are further added up to the overall hydropower capacity generated for this country. A similar approach is done for the remaining countries. At each point between reservoirs, the  water flows  are computed by CWatM and passed to FlexTool. These updated  water flows are updated and altered by the power produced and water consumed by each hydropower plant and fed back to CWatM.</p> <p></p>"},{"location":"introduction/#cwatm-spinetoolbox","title":"CWatM-spinetoolbox","text":"<p>This SpineToolbox workflow aimed at implementing the CWatM Model and creating the data workflow as well as scenario management. </p>"},{"location":"introduction/#reading-the-workflow","title":"Reading the workflow","text":"<p>To run this workflow, you will first need to setup SpineToolbox on your machine. Please refer to the SpineToolbox project to install and run it. This workflow was made using the 0.8 version as it includes new features as well as the new SpineDBapi.</p> <p>All initial template files are available in the repo.</p> <p>does-info@vtt.fi</p>"},{"location":"navigating/","title":"Navigating the workflow","text":""},{"location":"navigating/#navigating-the-workflow","title":"Navigating the workflow","text":"<p>Points 1 to 3 are optional and are interesting for users that already work with CWatM and would like to continue working on the model development via Toolbox. The workflows from 1-3 are designed to import existing files so users do not have to import them manually from the existing structure. </p> <p>When using this workflow from the beginning or setting up a new simulation in CWatM, it is best to go straight to point 4 where a template is made available to populate the database.</p>"},{"location":"navigating/#1-import-of-the-calibration-ini-file-into-the-database","title":"1. Import of the calibration .ini file into the database","text":"<p>The calibration init file is the typical CWatM ini file that is given in the tutorials. You can re-link the file depending on where you have installed your CWatM copy. The purpose of this process is to populate the ini file entities, parameters, and parameter values into the spine DB interface. All parameters can further be modified once imported into the database. If the calibration init file is modified, a warning -- will be displayed on the first tool meaning that the file needs to be relinked. In this case, just drag and drop the file from the Available resources to the Tool arguments. The first tool converts the init file into a valid toml file that is standardised and can easily be imported into the SpineDatabase.</p> <p></p> <p>The parsing of the formatted toml file is then done where some characteristics can be added to the import options.</p> <p>0: This is the database that is available as resources in the window below (Available Resources)</p> <p>1: Name of the alternative you would like to import the init file into.</p> <p>2: This can take 2 type of arguments: \"calibration\" or \"initfile\". a) If calibration is chosen, then all the parameters in the file will be allocated to the calibration alternative. If the calibration alternative already exist in the database, it will allocate it to an automatic numbering e.g. calibrationxx. b) if the \"initfile\" argument is filled, it will split the ini cwatm file into 2 separate alternatives; the first alternative with name provided in (1) will contains all the variables except the output. A second alternative called \"output_*YOURALTERNATIVE*xx\" will contain all the variables for the outputs. The reason being that we can re-use all the variables for the calibration as well without having to create many alternatives but just 1 base-one and then combine the outputs needed.</p> <p>3: Boolean (opt: default=true) set to true or false that defines if the file should be imported in the database or not.  </p> <p></p>"},{"location":"navigating/#2-resetting-the-database","title":"2. Resetting the database","text":"<p>Warning</p> <p>This second section is to be used cautiously. This resets the database by deleting all its components except the Base alternative. The entities inside the Base alternative are removed and only the Base alternative remains empty. </p> <p></p> <p>By default, the second argument is set to false, which does not reset the Spine Database and just bypasses the whole tool. In case one would like to reset the entire database, set the second argument to true and the entire Spine Database will be reset.</p>"},{"location":"navigating/#3-import-cwatm-ini-files","title":"3. Import CWatM .ini files","text":"<p>The third section Imports your working CWatM ini file. In essence, you would not need both connectors but for the sake of clarity, two data connectors are placed in the workflow. The first data connector defines the basic format of CWatM using the setting_CWatM_template_30min.ini file distributed by CWatM. The second data connector is used to populate any .ini file that is generated by the user. In both cases, ensure that the paths to the ini files are correct in the *Data Connection Properties window. </p> <p>Attention</p> <p>In the first tool, the original ini file is being converted into a valid toml file. Ensure that the file you want to use is the one you want to import in the Spine Database. </p>"},{"location":"navigating/#4-the-spine-database","title":"4. The Spine Database","text":"<p>This is the central database, also called the Spine Database, where all the data are stored. Alternative and Scenario can be created manually and if any data needs to be changed, added, or add new main section in the .ini files can be done from the database. However, the preferred way is to import the template from the CWatM template and change directly after importing the template. When double clicking on database, it will open the Spine Database interface that would look like somewhat similar to what is shown below after completing step 1-3.</p> <p></p> <p>The Entities are shown on the left-hand side of the table. By selecting the entity, only the parameters from the selected entity will be displayed.</p> <p>If creating it from the template, create a new empty database from the interface (File&gt;New), save it. Then Import the template (File&gt;Import) and select the basic_model.json. It contains all the variables, variable definitions and icons.</p> <p>Tip</p> <p>Pay special attention to the FILE_PATHS entity as this is the one that will vary between the different alternative e.g. meteo files for the 30-arcmin or 5-arcmin spatial resolution</p> <p>Basic variables to modify to work with toolbox</p> entity name Parameter name Basic value OPTIONS PathOut ./output INITITIAL CONDITIONS initLoad ./init/FILENAME.nc INITITIAL CONDITIONS initSave ./init/BASINNAME"},{"location":"navigating/#cwatm-template","title":"CWatM template","text":"<p>The template comes with a pre-filled values for all the variables, variable definitions (Parameter definitions), and couple of scenarios.</p> <p>The pre-filled values integrate the 30 arcmin example from IIASA as definition all stored under the Base alternative. </p>"},{"location":"navigating/#5-run-your-calibration","title":"5. Run your calibration","text":"<p>Export the database for the calibration and run the calibration. It exports 2 **.ini* files: one for the calibration setup (upper flow) and one for the CWatM model that needs to be calibrated (downward flow). The upstream flow produces a file called calib_input.ini and the downstream flow produces a file named calib_ini.ini. The arguments from the Tool properties do not need to be updated as they are set for the model. The outputs from the calibration are then exported and setup from the best alternative is imported back into the database under the alternative \"best_calib\". This section can be run as is. However, by clicking the first arrow, ensure you have created a calibration and a calibration_ini scenario. The first one includes all the parameters from the Base and the calibration alternatives to build a readable ini file by CWatM and run the calibration. The second one only includes the calibration setup required by the calibration tool. </p> <p></p> <p>Tip</p> <p>If you are using the template as mentioned in step 4, the upward arrow should point to the alternative calibration_ini, and the downward arrow should point to the scenario calibration.</p>"},{"location":"navigating/#6-run-cwatm-as-a-standalone-process","title":"6. Run CwatM as a standalone process","text":"<p>Run a regular CWatM flow. This is done from the database and can be run in sequence from the calibration set up. By clicking the yellow arrow before the export tool, one can choose which scenario to run into CWatM.</p> <p></p> <p>Tip</p> <p>If you are using the template as mentioned in step 4, the scenario cwatm_template_30arcmin already include the necessary variables, granted the users have modified the necessary path and have the necessary files (maps, etc...)</p>"},{"location":"navigating/#7-model-coupling-cwatm-irena-flextool","title":"7. Model coupling CWatM + IRENA FlexTool","text":"<p>With this section, it is possible to run the CWatM model in junction with IRENA FlexTool. The main workflow here is to be able to set a rolling period where the hydrology model is run and then pass the results to IRENA FlexTool. Extra steps to setup the IRENA FlexTool model are required and are explained in the coupling section. Note that the coupling could be generalised for sequential coupling with any model.</p> <p></p>"},{"location":"references/","title":"References","text":""},{"location":"references/#references","title":"References","text":"<p>[1]  Krokhmal, P., Uryasev, S., and Palmquist, J., \u201cPortfolio optimization with conditional value-at-risk objective and constraints,\u201d J. Risk, vol. 4, no. 2, pp. 43\u201368, 2001, doi: 10.21314/jor.2002.057.</p> <p>[2]  Fleten, S. E. and Kristoffersen, T. K., \u201cStochastic programming for optimizing bidding strategies of a Nordic hydropower producer,\u201d Eur. J. Oper. Res., vol. 181, no. 2, pp. 916\u2013928, 2007, doi: 10.1016/j.ejor.2006.08.023.</p>"},{"location":"references/#funding","title":"Funding","text":"<p>The development of Predicer has been partially funded in the EU Horizon ELEXIA, Business Finland HOPE and Academy of Finland EasyDR projects. - European Union ELEXIA: Demonstration of a digitized energy system integration across sectors enhancing flexibility and resilience towards efficient, sustainable, cost-optimised, affordable, secure and stable energy supply - Business Finland HOPE: Highly Optimized Energy systems - Academy of Finland EasyDR: Enabling demand response through easy to use open source approach</p> <p> </p> This work has been partially supported by the EU project ELEXIA (2022-2026), which has received funding from the European Climate, Energy and Mobility programme under the European Union's HORIZON research and Innovation actions under grant N\u00b0101075656."},{"location":"setting_calibration/","title":"Setup for calibration","text":""},{"location":"setting_calibration/#setup-for-calibration","title":"Setup for calibration","text":"<p>One important part in running hydrology model is the calibration of the model. We have also integrated this feature provided by CWatM for their model. However, this is more tedious setup as the calibration files are not ordered in a way that can be easily be put together. In this page, we will explain how to import calibration file and to which alternative, how to maintain the calibration files and run a calibration example. </p> <p></p>"},{"location":"setting_calibration/#importing-calibration-settings","title":"Importing calibration settings","text":"<p>Tip</p> <p>This section refers to the importing the calibration ini file to Toolbox part of the workflow</p> <p>The calibration files coming with CWatM do not match the structure of Toolbox, therefore some changes were made in the init file provided by CWatM. The two important settings are the pathfiles (similar to the the cwatm init file), and in addition, a CALIBRATION section was added to set the variables that needs to be calibrated. CWatM does not perform this step as it assumes users will implement these changes manually in the cwatm init file. However, this step can be automated by selecting the variables that need to be calibrated through the calibration run. </p> <p>added section</p> <pre><code>[CALIBRATION]\nOUT_Dir = %run_rand_id\nOUT_TSS_Daily = discharge\nOUT_TSS_MonthAvg = discharge\ncrop_correct =  %crop\nsoildepth_factor = %soildepthF\npreferentialFlowConstant = %pref\narnoBeta_add = %arnoB\nfactor_interflow = %interF\nrecessionCoeff_factor = %reces\nmanningsN = %CCM\nnormalStorageLimit = %normalStorageLimit\n</code></pre> <p>One can also skip this step and include the CALIBRATION section manually from the database. However, if this section is added to the original init calibration file, it will be automatically be allocated to a separate alternative called calibration</p> <ol> <li>select the data connection  and modify the path to the calibration init file. If nothing, there is a separate init file available in this repository under calibration&gt;settings_calibration_SpineToolBox.txt</li> <li>ensure that the path to the file is correct in the first tool (convert_to_valid_toml (2))</li> <li>Set the parse_toml tool input arguments and import the file into the database</li> </ol>"},{"location":"setting_calibration/#calibration-database","title":"Calibration Database","text":"<p>After importing the database, two new alternatives should be added, the first one being the calibration name the users has defined, and the second one is the calibration alternative with the CALIBRATION entity class only</p> <p>In the calibration database, the following entity and parameter_name should be checked to get the correct value</p> <p>DEFAULT: Root = .\\</p> <p>DEFAULT: RootPC = .\\</p> <p>DEFAULT: Rootbasin = .\\</p> <p>Path: Templates = settings_templates_CWatM</p> <p>Templates: ModelSettings = calib_cwatm.ini</p>"},{"location":"setting_calibration/#creating-a-calibration-scenario","title":"Creating a calibration scenario","text":"<p>To run any calibration, one will need 1. a cwatm ini file against which the calibration is made, and a calibration file to know how to calibrate it.</p> <p>The first step is to recreate a valid CWatM file. If you have not imported any CWatM file into the database as a Base alternative, please go to have a look at the create a standalone model section.</p> <p>Create a scenario named calibration and drag&amp;drop the cwatm base alternative and the calibration alternative and you should have this scenario displayed as below</p> <p></p> <p>Toolbox will now recreate the CWatM init file taking the base scenario input variables and add/replace the variables with the calibration data.</p>"},{"location":"setting_calibration/#running-the-calibration","title":"Running the calibration","text":"<p>Tip</p> <p>This section refers to the running calibration file in SpineToolbox part of the workflow.</p> <p>Warning</p> <p>Remember to add your measurement files in the calibration tool defined. In the observed data, only those provided by CWatM community for their tutorial is added. Double click the Calibration tool &gt; in the Additional program files section, open the observed_data folder &gt; add your measurements csv (in the correct format as recommended by CWatM) </p> <p>To run the calibration, we need to go through two steps. The first steps is to ensure we are creating the correct calibration init file to CWatM and create the correct CWatM init file to run the model in calibration mode</p> <p>The first step consists in selecting the correct alternative from the filter. Filter is displayed while selecting the yellow arrow connecting the database to the export_to_ini_calibtxt tool.</p> <p></p> <p>Then in the second flow, we are sending the calibration scenario we created earlier. Ensure you select only the calibration scenario from the link properties of the workflow.</p> <p></p> <p>The last task is to ensure what will be the name of the alternative where you want to store the best results run from the calibration. You can rename the arguments  freely.</p> <p></p> <p>Select then the workflow and run the selection .</p>"},{"location":"setting_calibration/#results-and-running-best-calibration","title":"Results and running best calibration","text":"<p>The calibration run will be committed to the database automatically under the cwatm_best_test alternative (or whatever the name of the alternative the use has defined)</p>"},{"location":"blog/","title":"Blog","text":""}]}